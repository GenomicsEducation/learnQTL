# Habilita paquetes
library(ggplot2)
library(xlsx)
library(dplyr)
library(readxl)
set.seed(2022)
genotypes_1 <- sample(c("CC","TC","TT"), size = 1000, replace = TRUE)
genotypes_2 <- sample(c("CC","AC","AA"), size = 1000, replace = TRUE)
G1<- matrix(genotypes_1, nrow = 1000, ncol= 2, byrow = TRUE)
G2<- matrix(genotypes_2, nrow = 1000, ncol= 2, byrow = TRUE)
G3<- matrix(genotypes_1, nrow = 1000, ncol= 2, byrow = TRUE)
G4<- matrix(genotypes_2, nrow = 1000, ncol= 2, byrow = TRUE)
G5<- matrix(genotypes_1, nrow = 1000, ncol= 2, byrow = TRUE)
G <- data.frame(G1,G2,G3,G4,G5)
colnames(G) <- c("M1", "M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10")
G
# Simulating Molecular markers
set.seed(2022)
MM_1 <- sample(c("0","1","2"), size = 1000, replace = TRUE)
MM_2 <- sample(c("0","1","2"), size = 1000, replace = TRUE)
M1<- matrix(MM_1, nrow = 1000, ncol= 2, byrow = TRUE)
M2<- matrix(MM_2, nrow = 1000, ncol= 2, byrow = TRUE)
M3<- matrix(MM_1, nrow = 1000, ncol= 2, byrow = TRUE)
M4<- matrix(MM_2, nrow = 1000, ncol= 2, byrow = TRUE)
M5<- matrix(MM_1, nrow = 1000, ncol= 2, byrow = TRUE)
MM <- data.frame(M1,M2,M3,M4,M5)
colnames(MM) <- c("M1", "M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10")
MM
# Simulating Phenotype data
set.seed(2022)
WFE <-  rnorm(1000, mean = 6078, sd = 1190)
ID <- seq(1:1000)
pheno_data_WFE <- data.frame(ID,WFE)
# Database with molecular markers and phenotype information
data_all_MM <- data.frame(ID,MM,WFE)
# From messy data to tidy data
tidy_all_MM <- data_all_MM %>% gather("Marcador","Genotipo",2:10)
# Habilita paquetes
library(ggplot2)
library(xlsx)
library(dplyr)
library(readxl)
# From messy data to tidy data
tidy_all_MM <- data_all_MM %>% gather("Marcador","Genotipo",2:10)
View(data_all_MM)
# From messy data to tidy data
tidy_all_MM <- data_all_MM %>% gather("Marcador","Genotipo",2:11)
data_all_MM %>% gather("Marcador","Genotipo",2:11)
library(tidyr) # Para manipular datos
# From messy data to tidy data
tidy_all_MM <- data_all_MM %>% gather("Marcador","Genotipo",2:11)
View(tidy_all_MM)
# From messy data to tidy data
tidy_all_G <- data_all_G %>% gather("Marcador","Genotipo",2:11)
# Database with genotypes and phenotype information
data_all_G <- data.frame(ID,G,WFE)
# From messy data to tidy data
tidy_all_G <- data_all_G %>% gather("Marcador","Genotipo",2:11)
View(data_all_MM)
View(data_all_G)
View(tidy_all_G)
View(tidy_all_G)
ggplot(tidy_all_G, aes(WFE))+
geom_histogram()+
labs(title="Histograma", x="WFE",
y="Frecuencia") +
ggplot(tidy_all_G, aes(WFE))+
geom_histogram()+
labs(title="Histograma", x="WFE",
y="Frecuencia")
ggplot(tidy_all_G, aes(WFE))+
geom_histogram(fill="deepskyblue4")+
labs(title="Histograma", x="WFE",
y="Frecuencia")
ggplot(tidy_all_G, aes(WFE))+
geom_histogram(color="white",fill="deepskyblue4")+
labs(title="Histograma", x="WFE",
y="Frecuencia")
ggplot(tidy_all_G, aes(x=Marcadory=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
ggplot(tidy_all_G, aes(x=Marcador, y=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
ggplot(aes(x=Marcador, y=WFE))+
geom_boxplot("deepskyblue4")+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
ggplot(aes(x=Marcador, y=WFE))+
geom_boxplot(fill="deepskyblue4")+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
tidy_all_G %>% filter(Marcador=="M1")
ggplot(aes(x=Marcador, y=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
# Gráfica de boxplot
tidy_all_G %>% filter(Marcador=="M1") %>%
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot()+
labs(title="Boxplot", x="Genotipo",
y="Fenotipo")
tidy_all_G %>% filter(Marcador=="M1") %>%
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot(color="lightgray")+
labs(title="Boxplot", x="Genotipo", y="Fenotipo")
tidy_all_G %>% filter(Marcador=="M1") %>%
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot(fill="lightgray")+
labs(title="Boxplot", x="Genotipo", y="Fenotipo")
tidy_all_G %>% filter(Marcador=="M1") %>%
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot(fill="deepskyblue4")+
labs(title="Boxplot", x="Genotipo", y="Fenotipo")
tidy_all_G %>%
group_by(Marcador, Genotipo) %>%
summarize(Freq=n())
Freq_G <- tidy_all_G %>%
group_by(Marcador, Genotipo) %>%
summarize(N=n(),Freq=n()/sum(n)))
Freq_G <- tidy_all_G %>%
group_by(Marcador, Genotipo) %>%
summarize(N=n(),Freq=n()/sum(n))
tidy_all_G %>%
group_by(Marcador, Genotipo) %>%
summarize(n=n()) %>%
mutate(freq = n/sum(n))
Freq_G <- tidy_all_G %>%
group_by(Marcador, Genotipo) %>%
summarize(n=n()) %>%
mutate(freq = n/sum(n))
# Save the dataset
write.xlsx (Freq_G, file="Freq_G.xlsx",row.names = FALSE)
View(Freq_G)
# Save the dataset
write.xlsx (Freq_G, file="Freq_G.xlsx",row.names = FALSE)
# Save the dataset
write.xlsx(Freq_G, file="Freq_G.xlsx",row.names = FALSE)
View(Freq_G)
write.xlsx (tidy_all_G, file="tidy_all_G.xlsx",row.names = FALSE)
class(tidy_all_G)
class(Freq_G)
Freq_G <- as.data.frame(Freq_G)
class(Freq_G)
# Save the dataset
write.xlsx(Freq_G, file="Freq_G.xlsx",row.names = FALSE)
# Remover objetos de la lista
rm(list=ls())
# Simulating genotype data
set.seed(2022)
genotypes_1 <- sample(c("CC","TC","TT"), size = 1000, replace = TRUE)
genotypes_2 <- sample(c("CC","AC","AA"), size = 1000, replace = TRUE)
G1<- matrix(genotypes_1, nrow = 1000, ncol= 2, byrow = TRUE)
G2<- matrix(genotypes_2, nrow = 1000, ncol= 2, byrow = TRUE)
G3<- matrix(genotypes_1, nrow = 1000, ncol= 2, byrow = TRUE)
G4<- matrix(genotypes_2, nrow = 1000, ncol= 2, byrow = TRUE)
G5<- matrix(genotypes_1, nrow = 1000, ncol= 2, byrow = TRUE)
G <- data.frame(G1,G2,G3,G4,G5)
colnames(G) <- c("M1", "M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10")
G
# Simulating Molecular markers
set.seed(2022)
MM_1 <- sample(c("0","1","2"), size = 1000, replace = TRUE)
MM_2 <- sample(c("0","1","2"), size = 1000, replace = TRUE)
M1<- matrix(MM_1, nrow = 1000, ncol= 2, byrow = TRUE)
M2<- matrix(MM_2, nrow = 1000, ncol= 2, byrow = TRUE)
M3<- matrix(MM_1, nrow = 1000, ncol= 2, byrow = TRUE)
M4<- matrix(MM_2, nrow = 1000, ncol= 2, byrow = TRUE)
M5<- matrix(MM_1, nrow = 1000, ncol= 2, byrow = TRUE)
MM <- data.frame(M1,M2,M3,M4,M5)
colnames(MM) <- c("M1", "M2", "M3", "M4", "M5", "M6", "M7", "M8", "M9", "M10")
MM
# Simulating Phenotype data
set.seed(2022)
WFE <-  rnorm(1000, mean = 6078, sd = 1190)
ID <- seq(1:1000)
pheno_data_WFE <- data.frame(ID,WFE)
# Database with molecular markers and phenotype information
data_all_MM <- data.frame(ID,MM,WFE)
# From messy data to tidy data
tidy_all_MM <- data_all_MM %>% gather("Marcador","Genotipo",2:11)
# Save the dataset
write.xlsx (tidy_all_MM , file="tidy_all_MM.xlsx", row.names = FALSE)
# Database with genotypes and phenotype information
data_all_G <- data.frame(ID,G,WFE)
# From messy data to tidy data
tidy_all_G <- data_all_G %>% gather("Marcador","Genotipo",2:11)
class(tidy_all_G)
# Save the dataset
write.xlsx(tidy_all_G, file="tidy_all_G.xlsx",row.names = FALSE)
# Calcula y exporta frecuencia
Freq_G <- tidy_all_G %>%
group_by(Marcador, Genotipo) %>%
summarize(n=n()) %>%
mutate(freq = n/sum(n))
Freq_G <- as.data.frame(Freq_G)
class(Freq_G)
# Save the dataset
write.xlsx(Freq_G, file="Freq_G.xlsx",row.names = FALSE)
# Remover objetos de la lista
rm(list=ls())
# Load the database
tidy_all_G <- read_excel("tidy_all_G.xlsx")
# Load the database
tidy_all_MM <- read_excel("tidy_all_MM.xlsx")
# Load the database
Freq_G  <- read_excel("Freq_G.xlsx")
# Histogram for WFE
ggplot(tidy_all_G, aes(WFE))+
geom_histogram(color="white",fill="deepskyblue4")+
labs(title="Histograma", x="WFE",
y="Frecuencia")
# Gráfica de boxplot
tidy_all_G %>% filter(Marcador=="M1") %>%
ggplot(aes(x=Genotipo, y=WFE))+
geom_boxplot(fill="deepskyblue4")+
labs(title="Boxplot", x="Genotipo", y="Fenotipo")
# Barplot for each QTL
Freq_G  %>% filter(Marcador=="M1") %>%
ggplot(data = Frec, aes(x = Genotipo, y = n, fill=Genotipo)) +
geom_col(position = position_dodge())+labs(title="QTL2", x= "Genotypes", y="Number of fish")+
theme(text = element_text(size=20))+
theme (axis.text.x = element_text(face="bold", colour="black"), axis.text.y = element_text(face="bold", colour="black", angle=90, hjust=0.5))+theme_classic(base_size=15)+
theme(plot.title = element_text(size = 15, face = "bold"))+
theme(axis.text.x = element_text(size = 15,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 15,face="bold",colour="black"))+
scale_y_continuous(limits=c(0,450))+
theme(legend.position="none")+geom_text(aes(label =n),vjust =-0.5,position = position_dodge(0.9),size =5)+
scale_x_discrete(labels=c("CC","TC","TT"))+
scale_fill_manual(values = c("lightgray", "deepskyblue4", "coral"))
Freq_G  %>% filter(Marcador=="M1") %>%
ggplot(aes(x = Genotipo, y = n, fill=Genotipo)) +
geom_col(position = position_dodge())+labs(title="QTL2", x= "Genotypes", y="Number of fish")+
theme(text = element_text(size=20))+
theme (axis.text.x = element_text(face="bold", colour="black"), axis.text.y = element_text(face="bold", colour="black", angle=90, hjust=0.5))+theme_classic(base_size=15)+
theme(plot.title = element_text(size = 15, face = "bold"))+
theme(axis.text.x = element_text(size = 15,face="bold",colour="black"))+
theme(axis.text.y = element_text(size = 15,face="bold",colour="black"))+
scale_y_continuous(limits=c(0,450))+
theme(legend.position="none")+geom_text(aes(label =n),vjust =-0.5,position = position_dodge(0.9),size =5)+
scale_x_discrete(labels=c("CC","TC","TT"))+
scale_fill_manual(values = c("lightgray", "deepskyblue4", "coral"))
